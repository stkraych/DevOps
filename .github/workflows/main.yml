
name: CI Feature branch

on:
  push:
    branches:
      - "M1-4-2-CI-Practice"

jobs:

  editorconfig:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: editorconfig-checker/action-editorconfig-checker@main
      - run: editorconfig-checker
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install black
          pip install pylint
          pip install types-Flask mypy
      - name: Check code style with black
        run: black --diff --check $(git ls-files '*.py')
      - name: Run pylint
        run: pylint --disable=all --enable=unused-import $(git ls-files '*.py')
      - name: Lint with Markdown-lint
        uses: articulate/actions-markdownlint@v1
        with:
          config: .markdownlint.json
          files: '**/*.md'
          ignore: node_modules

  unit-testing:
    runs-on: ubuntu-latest 
    
    steps:
    - name : Checkout code
      uses : actions/checkout@v2
      
    - name : Install Packages 
      run : pip install pytest && pip install Flask

      
    - name : Run tests 
      working-directory: ./app
      run : python -m unittest app_test.py

  scan:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}

  sonarcloud:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}    

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  docker:
   runs-on: ubuntu-latest
   steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag python-app:${{ github.sha }}
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'python-app:${{ github.sha }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
    - name: List Docker images
      run: docker images
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Push to Dockerhub
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/python-app