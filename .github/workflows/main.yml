
name: CI Feature branch

on:
  push:
    branches:
      - "M1-4-2-CI-Practice"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: editorconfig-checker/action-editorconfig-checker@main
      - run: editorconfig-checker
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - name: Install python
        run: |
          cd ./app
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt -t .; fi
      - name: Install and check code style with black and run pylint
        run:  |
         pip install black pylint
         black --diff --check $(git ls-files '*.py')
         pylint --disable=all --enable=unused-import $(git ls-files '*.py')
      - name: Lint with Markdown-lint
        uses: articulate/actions-markdownlint@v1
        with:
          config: .markdownlint.json
          files: '**/*.md'
          ignore: node_modules
      - name : Install pytest 
        run : pip install pytest 
      - name : Run tests 
        working-directory: ./app
        run : python -m unittest app_test.py

  test:
    name: gitleaks
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
  #   - name: SonarCloud Scan
  #     uses: sonarsource/sonarcloud-github-action@master
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
  #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}    

  # security:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  # docker:
  #  runs-on: ubuntu-latest
  #  steps:
  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v3
  #     with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image
  #     run: docker build . --file Dockerfile --tag seeshellol/python-app:${{ github.sha }}
  #   - name: Run Trivy vulnerability scanner
  #     uses: aquasecurity/trivy-action@master
  #     with:
  #       image-ref: 'seeshellol/python-app:${{ github.sha }}'
  #       format: 'table'
  #       exit-code: '1'
  #       ignore-unfixed: true
  #       vuln-type: 'os,library'
  #       severity: 'CRITICAL,HIGH'
  #   - name: List Docker images
  #     run: docker images  
  #   - name: Push to Dockerhub
  #     run: docker push seeshellol/python-app:${{ github.sha }}